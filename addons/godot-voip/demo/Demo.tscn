[gd_scene load_steps=5 format=3 uid="uid://b6xnr0gdbvc5i"]

[ext_resource type="Script" path="res://addons/godot-voip/scripts/voice_orchestrator.gd" id="1"]
[ext_resource type="Script" path="res://addons/godot-voip/demo/Network.gd" id="2"]
[ext_resource type="Texture2D" uid="uid://cqgrd13fs8brt" path="res://icon.svg" id="3"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Control

@onready var buttonServer: Button = $MarginContainer/HBoxContainer/VBoxContainer/Server
@onready var buttonClient: Button = $MarginContainer/HBoxContainer/VBoxContainer/Client
@onready var buttonVoice : Button = $MarginContainer/HBoxContainer/VBoxContainer/Voice
#@onready var buttonDisconnect : Button = $MarginContainer/HBoxContainer/VBoxContainer/Disconnect

@onready var spinBoxHostPort: SpinBox = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer2/Port
@onready var lineEditClientIp: LineEdit = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer1/Ip
@onready var spinBoxClientPort: SpinBox = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer3/Port
@onready var checkboxListen: CheckBox = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4/Listen
@onready var checkBoxToggle: CheckBox = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4/Toggle
@onready var sliderInputThreshold: HSlider = $MarginContainer/HBoxContainer/VBoxContainer/InputThreshold

@onready var labelStatus: Label = $MarginContainer/HBoxContainer/VBoxContainer2/HBoxContainer/Status
@onready var labelLog: RichTextLabel = $MarginContainer/HBoxContainer/VBoxContainer2/Log
@onready var spinBoxInputThreshold: SpinBox = $MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer/Value

@onready var voice: VoiceOrchestrator = $VoiceOrchestrator
@onready var network: Network = $Network

func _ready() -> void:
	voice.received_voice_data.connect(_received_voice_data)
	voice.sent_voice_data.connect(_sent_voice_data)

	multiplayer.connected_to_server.connect(_connected_ok)
	multiplayer.server_disconnected.connect(_server_disconnected)
	multiplayer.connection_failed.connect(_connected_fail)
	
	multiplayer.peer_connected.connect(_player_connected)
	multiplayer.peer_disconnected.connect(_player_disconnected)

	if voice.recording:
		checkBoxToggle.button_pressed = true
		buttonVoice.button_pressed = true

	spinBoxHostPort.value = network.server_port
	lineEditClientIp.text = network.server_ip
	spinBoxClientPort.value = network.server_port
	checkboxListen.button_pressed = voice.listen
	checkBoxToggle.button_pressed = buttonVoice.toggle_mode
	sliderInputThreshold.value = voice.input_threshold

func _on_Button_server_pressed() -> void:
	var err = network.start_server()
	if err != OK:
		labelStatus.text = \"Failed to create server! Error: %s\" % err

		if err == FAILED && OS.get_name() == \"HTML5\":
			labelStatus.text += \", Starting a server is not supported on HTML5.\"

		return

	labelStatus.text = \"server started\"

	ui_transition()

func _on_Button_client_pressed() -> void:
	var err = network.start_client()
	if err != OK:
		labelStatus.text = \"Failed to create client! Error: %s\" % err
		return

	labelStatus.text = \"Connecting...\"


func _on_Button_voice_button_down() -> void:
	if !buttonVoice.toggle_mode:
		voice.recording = true

func _on_Button_voice_button_up() -> void:
	if !buttonVoice.toggle_mode:
		voice.recording = false

func _on_Voice_toggled(button_pressed: bool) -> void:
	voice.recording = button_pressed

func _on_Toggle_toggled(button_pressed: bool) -> void:
	buttonVoice.toggle_mode = button_pressed

func _on_Listen_toggled(button_pressed: bool) -> void:
	voice.listen = button_pressed

func _on_InputThreshold_value_changed(value: float) -> void:
	voice.input_threshold = value
	spinBoxInputThreshold.value = value

func _on_Value_value_changed(value: float) -> void:
	sliderInputThreshold.value = value

func _on_Port_value_changed(value: float) -> void:
	network.server_port = int(value)

func _on_Ip_text_changed(new_text: String) -> void:
	network.server_ip = new_text

func _connected_ok() -> void:
	labelStatus.text = \"Connected ok\"
	ui_transition()

func _connected_fail() -> void:
	labelStatus.text = \"Failed to connect to server!\"
	ui_reset()

func _server_disconnected() -> void:
	labelStatus.text = \"Server disconnected\"
	ui_reset()

func _player_connected(_id: int) -> void:
	labelLog.text += \"Player with id: %s connected\\n\" % _id

func _player_disconnected(_id: int) -> void:
	labelLog.text += \"Player with id: %s disconnected\\n\" % _id

func _received_voice_data(data: PackedFloat32Array, id: int) -> void:
	labelLog.add_text(\"received voice data of size:%s from id:%s\\n\" % [data.size(), id])

func _sent_voice_data(data: PackedFloat32Array) -> void:
	labelLog.add_text(\"sent voice data of size:%s\\n\" % data.size())


func ui_transition() -> void:
	buttonServer.disabled = true
	buttonClient.disabled = true
	buttonVoice.disabled = false
	#buttonDisconnect.disabled = false
	checkboxListen.disabled = false
	checkBoxToggle.disabled = false
	sliderInputThreshold.editable = true
	spinBoxInputThreshold.editable = true
	spinBoxHostPort.editable = false
	lineEditClientIp.editable = false
	spinBoxClientPort.editable = false

func ui_reset() -> void:
	buttonServer.disabled = false
	buttonClient.disabled = false
	buttonVoice.disabled = true
	#buttonDisconnect.disabled = true
	checkboxListen.disabled = true
	checkBoxToggle.disabled = false
	buttonVoice.button_pressed = false
	sliderInputThreshold.editable = false
	spinBoxInputThreshold.editable = false
	spinBoxHostPort.editable = true
	lineEditClientIp.editable = true
	spinBoxClientPort.editable = true
"

[node name="Demo" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource("1")

[node name="Network" type="Node" parent="."]
script = ExtResource("2")

[node name="VoiceOrchestrator" type="Node" parent="."]
script = ExtResource("1")

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/HBoxContainer"]
layout_mode = 2

[node name="Server" type="Button" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Start server"

[node name="HBoxContainer2" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer2"]
layout_mode = 2
text = "Host port:"

[node name="Port" type="SpinBox" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer2"]
layout_mode = 2
size_flags_horizontal = 3
max_value = 65535.0
rounded = true

[node name="HSeparator" type="HSeparator" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Client" type="Button" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
text = "Start client"

[node name="HBoxContainer1" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label2" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer1"]
layout_mode = 2
text = "Server ip:"

[node name="Ip" type="LineEdit" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer1"]
layout_mode = 2
size_flags_horizontal = 3
text = "127.0.0.1"

[node name="HBoxContainer3" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label2" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer3"]
layout_mode = 2
text = "Server port:"

[node name="Port" type="SpinBox" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer3"]
layout_mode = 2
size_flags_horizontal = 3
max_value = 65535.0
rounded = true

[node name="HSeparator2" type="HSeparator" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "Input threshold:"

[node name="Value" type="SpinBox" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
max_value = 1.0
step = 0.0
editable = false

[node name="InputThreshold" type="HSlider" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
max_value = 0.1
step = 0.0
allow_greater = true
allow_lesser = true
editable = false
ticks_on_borders = true

[node name="HBoxContainer4" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2

[node name="Listen" type="CheckBox" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4"]
layout_mode = 2
size_flags_horizontal = 3
disabled = true
text = "Listen"

[node name="Toggle" type="CheckBox" parent="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4"]
layout_mode = 2
size_flags_horizontal = 3
disabled = true
text = "Toggle"

[node name="Voice" type="Button" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
disabled = true
text = "Speak"

[node name="CenterContainer" type="CenterContainer" parent="MarginContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="TextureRect" type="TextureRect" parent="MarginContainer/HBoxContainer/VBoxContainer/CenterContainer"]
layout_mode = 2
texture = ExtResource("3")
expand_mode = 1
stretch_mode = 5

[node name="VBoxContainer2" type="VBoxContainer" parent="MarginContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer/HBoxContainer/VBoxContainer2"]
layout_mode = 2

[node name="Label" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer2/HBoxContainer"]
layout_mode = 2
text = "Status:"

[node name="Status" type="Label" parent="MarginContainer/HBoxContainer/VBoxContainer2/HBoxContainer"]
layout_mode = 2

[node name="Log" type="RichTextLabel" parent="MarginContainer/HBoxContainer/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
focus_mode = 2
scroll_following = true
selection_enabled = true

[connection signal="pressed" from="MarginContainer/HBoxContainer/VBoxContainer/Server" to="." method="_on_Button_server_pressed"]
[connection signal="value_changed" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer2/Port" to="." method="_on_Port_value_changed"]
[connection signal="pressed" from="MarginContainer/HBoxContainer/VBoxContainer/Client" to="." method="_on_Button_client_pressed"]
[connection signal="text_changed" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer1/Ip" to="." method="_on_Ip_text_changed"]
[connection signal="value_changed" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer3/Port" to="." method="_on_Port_value_changed"]
[connection signal="value_changed" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer/Value" to="." method="_on_Value_value_changed"]
[connection signal="value_changed" from="MarginContainer/HBoxContainer/VBoxContainer/InputThreshold" to="." method="_on_InputThreshold_value_changed"]
[connection signal="toggled" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4/Listen" to="." method="_on_Listen_toggled"]
[connection signal="toggled" from="MarginContainer/HBoxContainer/VBoxContainer/HBoxContainer4/Toggle" to="." method="_on_Toggle_toggled"]
[connection signal="button_down" from="MarginContainer/HBoxContainer/VBoxContainer/Voice" to="." method="_on_Button_voice_button_down"]
[connection signal="button_up" from="MarginContainer/HBoxContainer/VBoxContainer/Voice" to="." method="_on_Button_voice_button_up"]
[connection signal="toggled" from="MarginContainer/HBoxContainer/VBoxContainer/Voice" to="." method="_on_Voice_toggled"]
